---
import BaseLayout from "../layout/baseLayout.astro";
import Event from "../components/EventItem.astro";
import FAB from "../components/FAB.astro";
import { slugify } from "../scripts/GlobalFunctions";
import { db, EventTable } from 'astro:db';

const pageTitle = "Events";
const apiUrl = "https://data.carinthia.com/api/v4/endpoints/557ea81f-6d65-6476-9e01-d196112514d2?include=image&token=9962098a5f6c6ae8d16ad5aba95afee0";
const response = await fetch(apiUrl);
const data = await response.json();

// Extrahiere die Veranstaltungen aus dem @graph-Array
let events = await db.select().from(EventTable);

if(events.length == 0){
	if (data && data["@graph"]) {
  // Verwende eine for...of-Schleife für asynchrone Operationen
		for (const event of data["@graph"]) {
			const cleanDescription = event.description.replace(/<[^>]+>/g, '');
			let img = '';
			
			if (event.image && Array.isArray(event.image) && event.image.length > 0) {
			// Iteriere durch jedes Bild-Objekt im Array
			for (const image of event.image) {
				if (image.contentUrl) {
				img = image.contentUrl;
				break; // Nimm das erste Bild und verlasse die Schleife
				}
			}
			}
			
			const id = event["@id"] || '';
			const name = event.name || '';
			const desc = cleanDescription || '';
			const sd = event.startDate || '';
			const ed = event.endDate || '';			

			// Füge das Event in die Datenbank ein
			try {
			await db.insert(EventTable).values({
				id: id,            
				title: name,   
				description: desc,
				startDate: sd,     
				endDate: ed,       
				thumbnailUrl: img  
			});
			} catch (error) {
			console.error('Fehler beim Einfügen des Events:', error);
			}

			// Füge das Event in das lokale events-Array ein
			events.push({
			id: id,
			title: name,
			description: desc,
			startDate: sd,
			endDate: ed,
			thumbnailUrl: img
			});
		}
	} else {
	console.error("Keine Veranstaltungsdaten gefunden");
	}
}

---
<BaseLayout pageTitle={pageTitle}>
	

	

	{events.length > 0 ? (
	  <ul  class="event-list ">
		{events.map((event) => (
		  <Event 
			url={`/events/${event.id}`} 
			title={event.title} 
			description={event.description} 
			startDate={event.startDate} 
			endDate={event.endDate} 
			thumbnailUrl={event.thumbnailUrl}
			
		  />
		))
		}
	  </ul>
	) : (
	  <p>Keine Veranstaltungen verfügbar.</p>
	)}
	<div class="fab-container">
       <FAB/>
    </div>
</BaseLayout>

<style>
	.imgContainer{
		display: flex;
    	justify-content: center;  /* Zentriert das Bild horizontal */
    	align-items: center;      /* Zentriert das Bild vertikal (wenn Höhe gesetzt) */
    	width: 100%;              /* Container nimmt die volle Breite ein */
    	height: auto;             /* Falls du auch eine Höhe angeben möchtest */
	}

	img {
		height: auto;         /* Behalte das Seitenverhältnis bei */
  		object-fit: cover;    /* Verhindert Verzerrungen und füllt den Bereich */
	}

	.fab-container {
		position: fixed;
		bottom: 20px;
		right: 20px;
		z-index: 1000;
	}

</style>

